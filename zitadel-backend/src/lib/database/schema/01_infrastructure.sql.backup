-- =============================================================================
-- ZITADEL Backend - Infrastructure Schema
-- =============================================================================
-- Description: Core infrastructure tables for event sourcing and projections
-- Schema: public
-- =============================================================================

-- Create projections schema if it doesn't exist
CREATE SCHEMA IF NOT EXISTS projections;

-- Table: projections.projection_states
-- Description: Track projection processing state with all required columns
CREATE TABLE IF NOT EXISTS projections.projection_states (
    -- Core identification and tracking
    name VARCHAR(255) PRIMARY KEY,
    position DECIMAL NOT NULL DEFAULT 0,
    position_offset INT NOT NULL DEFAULT 0,
    
    -- Timestamps
    last_processed_at TIMESTAMP WITH TIME ZONE,
    created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    
    -- Status tracking
    status VARCHAR(50) NOT NULL DEFAULT 'stopped',
    error_count INTEGER NOT NULL DEFAULT 0,
    last_error TEXT,
    
    -- Enhanced tracking fields (optional, nullable for backward compatibility)
    event_timestamp TIMESTAMPTZ,
    instance_id TEXT,
    aggregate_type TEXT,
    aggregate_id TEXT,
    sequence BIGINT
);

-- Add indexes for projection_states common queries
CREATE INDEX IF NOT EXISTS idx_projection_states_status ON projections.projection_states(status);
CREATE INDEX IF NOT EXISTS idx_projection_states_position ON projections.projection_states(position);
CREATE INDEX IF NOT EXISTS idx_projection_states_position_offset ON projections.projection_states(name, position, position_offset);
CREATE INDEX IF NOT EXISTS idx_projection_states_updated_at ON projections.projection_states(updated_at DESC);

-- Table: public.action_flows_projection
CREATE TABLE IF NOT EXISTS public.action_flows_projection (
    flow_type TEXT NOT NULL,
    trigger_type TEXT NOT NULL,
    action_id TEXT NOT NULL,
    instance_id TEXT NOT NULL,
    resource_owner TEXT NOT NULL,
    creation_date TIMESTAMPTZ NOT NULL DEFAULT now(),
    change_date TIMESTAMPTZ NOT NULL DEFAULT now(),
    sequence BIGINT NOT NULL,
    trigger_sequence SMALLINT NOT NULL DEFAULT 0
);

-- Table: public.actions_projection
CREATE TABLE IF NOT EXISTS public.actions_projection (
    id TEXT NOT NULL,
    instance_id TEXT NOT NULL,
    resource_owner TEXT NOT NULL,
    creation_date TIMESTAMPTZ NOT NULL DEFAULT now(),
    change_date TIMESTAMPTZ NOT NULL DEFAULT now(),
    sequence BIGINT NOT NULL,
    name TEXT NOT NULL,
    script TEXT NOT NULL,
    timeout INTERVAL NOT NULL DEFAULT '00:00:10'::interval,
    allowed_to_fail BOOLEAN NOT NULL DEFAULT false,
    state SMALLINT NOT NULL DEFAULT 1
);

-- Table: public.applications_projection
CREATE TABLE IF NOT EXISTS public.applications_projection (
    id TEXT NOT NULL,
    instance_id TEXT NOT NULL,
    project_id TEXT NOT NULL,
    resource_owner TEXT NOT NULL,
    name TEXT NOT NULL,
    state TEXT NOT NULL DEFAULT 'active'::text,
    app_type TEXT NOT NULL,
    client_id TEXT,
    client_secret TEXT,
    redirect_uris JSONB,
    response_types JSONB,
    grant_types JSONB,
    oidc_app_type TEXT,
    auth_method_type TEXT,
    post_logout_redirect_uris JSONB,
    version INTEGER DEFAULT 1,
    dev_mode BOOLEAN DEFAULT false,
    access_token_type TEXT DEFAULT 'bearer'::text,
    access_token_role_assertion BOOLEAN DEFAULT false,
    id_token_role_assertion BOOLEAN DEFAULT false,
    id_token_userinfo_assertion BOOLEAN DEFAULT false,
    clock_skew INTEGER DEFAULT 0,
    additional_origins JSONB,
    skip_native_app_success_page BOOLEAN DEFAULT false,
    entity_id TEXT,
    metadata_url TEXT,
    metadata TEXT,
    acs_urls JSONB,
    single_logout_url TEXT,
    name_id_format TEXT,
    attribute_statements JSONB,
    created_at TIMESTAMPTZ NOT NULL,
    updated_at TIMESTAMPTZ NOT NULL,
    change_date TIMESTAMPTZ,
    sequence BIGINT NOT NULL DEFAULT 0
);

-- Table: public.auth_requests_projection
CREATE TABLE IF NOT EXISTS public.auth_requests_projection (
    id TEXT NOT NULL,
    instance_id TEXT NOT NULL,
    creation_date TIMESTAMPTZ NOT NULL,
    change_date TIMESTAMPTZ NOT NULL,
    sequence BIGINT NOT NULL,
    resource_owner TEXT NOT NULL,
    login_client TEXT NOT NULL,
    client_id TEXT NOT NULL,
    redirect_uri TEXT NOT NULL,
    state TEXT,
    nonce TEXT,
    scope TEXT[] NOT NULL DEFAULT '{}'::text[],
    audience TEXT[],
    response_type TEXT,
    response_mode TEXT,
    code_challenge TEXT,
    code_challenge_method TEXT,
    prompt TEXT[] DEFAULT '{}'::text[],
    ui_locales TEXT[],
    max_age INTEGER,
    login_hint TEXT,
    hint_user_id TEXT,
    need_refresh_token BOOLEAN DEFAULT false,
    session_id TEXT,
    user_id TEXT,
    auth_time TIMESTAMPTZ,
    auth_methods TEXT[],
    code TEXT,
    issuer TEXT
);

-- Table: public.email_configs
CREATE TABLE IF NOT EXISTS public.email_configs (
    id VARCHAR(255) NOT NULL,
    instance_id VARCHAR(255) NOT NULL,
    smtp_host VARCHAR(255),
    smtp_port INTEGER,
    smtp_user VARCHAR(255),
    smtp_password VARCHAR(255),
    smtp_from VARCHAR(255),
    smtp_from_name VARCHAR(255),
    smtp_reply_to VARCHAR(255),
    smtp_secure BOOLEAN DEFAULT false,
    enabled BOOLEAN NOT NULL DEFAULT true,
    created_at TIMESTAMP NOT NULL DEFAULT now(),
    updated_at TIMESTAMP NOT NULL DEFAULT now(),
    change_date TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP
);

-- Table: public.encryption_keys
CREATE TABLE IF NOT EXISTS public.encryption_keys (
    id TEXT NOT NULL,
    instance_id TEXT NOT NULL,
    algorithm TEXT NOT NULL,
    key_data BYTEA NOT NULL,
    identifier TEXT NOT NULL,
    created_at TIMESTAMPTZ NOT NULL DEFAULT now()
);

-- Table: public.enhanced_tracking_data
CREATE TABLE IF NOT EXISTS public.enhanced_tracking_data (
    id TEXT NOT NULL,
    data TEXT
);

-- Table: public.enhanced_tracking_data_2
CREATE TABLE IF NOT EXISTS public.enhanced_tracking_data_2 (
    id TEXT NOT NULL,
    data TEXT
);

-- Table: public.events
CREATE TABLE IF NOT EXISTS public.events (
    instance_id TEXT NOT NULL,
    aggregate_type TEXT NOT NULL,
    aggregate_id TEXT NOT NULL,
    event_type TEXT NOT NULL,
    aggregate_version BIGINT NOT NULL,
    revision SMALLINT NOT NULL,
    created_at TIMESTAMPTZ NOT NULL,
    payload JSONB,
    creator TEXT NOT NULL,
    owner TEXT NOT NULL,
    position NUMERIC NOT NULL,
    in_tx_order INTEGER NOT NULL
);

-- Table: public.execution_states_projection
CREATE TABLE IF NOT EXISTS public.execution_states_projection (
    execution_id TEXT NOT NULL,
    instance_id TEXT NOT NULL,
    target_id TEXT NOT NULL,
    state SMALLINT NOT NULL DEFAULT 0,
    started_at TIMESTAMPTZ,
    finished_at TIMESTAMPTZ,
    error_message TEXT,
    retry_count SMALLINT NOT NULL DEFAULT 0,
    response JSONB
);

-- Table: public.executions_projection
CREATE TABLE IF NOT EXISTS public.executions_projection (
    id TEXT NOT NULL,
    instance_id TEXT NOT NULL,
    aggregate_type TEXT NOT NULL,
    aggregate_id TEXT NOT NULL,
    action_id TEXT NOT NULL,
    creation_date TIMESTAMPTZ NOT NULL DEFAULT now(),
    event_type TEXT NOT NULL,
    event_sequence BIGINT NOT NULL,
    targets JSONB
);

-- Table: public.instance_domains_projection
CREATE TABLE IF NOT EXISTS public.instance_domains_projection (
    instance_id TEXT NOT NULL,
    domain TEXT NOT NULL,
    is_primary BOOLEAN NOT NULL DEFAULT false,
    is_generated BOOLEAN NOT NULL DEFAULT false,
    created_at TIMESTAMPTZ NOT NULL,
    updated_at TIMESTAMPTZ NOT NULL,
    sequence BIGINT NOT NULL DEFAULT 0,
    change_date TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP
);

-- Table: public.instance_trusted_domains_projection
CREATE TABLE IF NOT EXISTS public.instance_trusted_domains_projection (
    instance_id TEXT NOT NULL,
    domain TEXT NOT NULL,
    created_at TIMESTAMPTZ NOT NULL,
    sequence BIGINT NOT NULL DEFAULT 0,
    change_date TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP
);

-- Table: public.instances_projection
CREATE TABLE IF NOT EXISTS public.instances_projection (
    id TEXT NOT NULL,
    name TEXT NOT NULL,
    default_org_id TEXT,
    default_language TEXT,
    state TEXT NOT NULL DEFAULT 'active'::text,
    features JSONB,
    created_at TIMESTAMPTZ NOT NULL,
    updated_at TIMESTAMPTZ NOT NULL,
    sequence BIGINT NOT NULL DEFAULT 0,
    instance_id TEXT NOT NULL,
    change_date TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP
);

-- Table: public.lockout_policies_projection
CREATE TABLE IF NOT EXISTS public.lockout_policies_projection (
    id TEXT NOT NULL,
    instance_id TEXT NOT NULL,
    resource_owner TEXT NOT NULL,
    max_password_attempts INTEGER NOT NULL DEFAULT 5,
    max_otp_attempts INTEGER NOT NULL DEFAULT 5,
    show_failure BOOLEAN NOT NULL DEFAULT true,
    is_default BOOLEAN NOT NULL DEFAULT false,
    created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    change_date TIMESTAMPTZ NOT NULL DEFAULT now(),
    sequence BIGINT NOT NULL DEFAULT 0
);

-- Table: public.login_names_projection
CREATE TABLE IF NOT EXISTS public.login_names_projection (
    user_id TEXT NOT NULL,
    instance_id TEXT NOT NULL,
    resource_owner TEXT NOT NULL,
    login_name TEXT NOT NULL,
    domain_name TEXT NOT NULL,
    is_primary BOOLEAN NOT NULL DEFAULT false,
    created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    change_date TIMESTAMPTZ,
    sequence BIGINT NOT NULL DEFAULT 0
);

-- Table: public.milestones_projection
CREATE TABLE IF NOT EXISTS public.milestones_projection (
    id TEXT NOT NULL,
    instance_id TEXT NOT NULL,
    milestone_type SMALLINT NOT NULL,
    aggregate_type TEXT NOT NULL,
    aggregate_id TEXT NOT NULL,
    name TEXT NOT NULL,
    reached_date TIMESTAMPTZ,
    pushed_date TIMESTAMPTZ,
    primary_domain TEXT,
    creation_date TIMESTAMPTZ NOT NULL DEFAULT now(),
    change_date TIMESTAMPTZ NOT NULL DEFAULT now(),
    sequence BIGINT NOT NULL
);

-- Table: public.notification_config_changes
CREATE TABLE IF NOT EXISTS public.notification_config_changes (
    id VARCHAR(255) NOT NULL,
    instance_id VARCHAR(255) NOT NULL,
    config_type VARCHAR(50) NOT NULL,
    config_id VARCHAR(255) NOT NULL,
    changed_by VARCHAR(255),
    changes JSONB NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT now()
);

-- Table: public.notification_providers
CREATE TABLE IF NOT EXISTS public.notification_providers (
    id VARCHAR(255) NOT NULL,
    instance_id VARCHAR(255) NOT NULL,
    provider_type VARCHAR(50) NOT NULL,
    config JSONB NOT NULL,
    enabled BOOLEAN NOT NULL DEFAULT true,
    created_at TIMESTAMP NOT NULL DEFAULT now(),
    updated_at TIMESTAMP NOT NULL DEFAULT now(),
    change_date TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP
);

-- Table: public.org_domains_projection
CREATE TABLE IF NOT EXISTS public.org_domains_projection (
    org_id TEXT NOT NULL,
    domain TEXT NOT NULL,
    is_verified BOOLEAN NOT NULL DEFAULT false,
    is_primary BOOLEAN NOT NULL DEFAULT false,
    validation_type TEXT NOT NULL DEFAULT 'dns'::text,
    validation_code TEXT,
    created_at TIMESTAMPTZ NOT NULL,
    updated_at TIMESTAMPTZ NOT NULL,
    sequence BIGINT NOT NULL DEFAULT 0,
    instance_id TEXT NOT NULL DEFAULT 'default-instance'::text,
    change_date TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP
);

-- Table: public.orgs_projection
CREATE TABLE IF NOT EXISTS public.orgs_projection (
    id TEXT NOT NULL,
    instance_id TEXT NOT NULL,
    name TEXT NOT NULL,
    state TEXT NOT NULL DEFAULT 'active'::text,
    primary_domain TEXT,
    resource_owner TEXT,
    created_at TIMESTAMPTZ NOT NULL,
    updated_at TIMESTAMPTZ NOT NULL,
    change_date TIMESTAMPTZ,
    sequence BIGINT NOT NULL DEFAULT 0
);

-- Table: public.personal_access_tokens_projection
CREATE TABLE IF NOT EXISTS public.personal_access_tokens_projection (
    id TEXT NOT NULL,
    instance_id TEXT NOT NULL,
    user_id TEXT NOT NULL,
    token_hash TEXT NOT NULL,
    scopes TEXT[] DEFAULT '{}'::text[],
    expiration_date TIMESTAMPTZ,
    last_used TIMESTAMPTZ,
    created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    change_date TIMESTAMPTZ NOT NULL DEFAULT now(),
    sequence BIGINT NOT NULL DEFAULT 0
);

-- Table: public.project_grant_members_projection
CREATE TABLE IF NOT EXISTS public.project_grant_members_projection (
    project_id TEXT NOT NULL,
    grant_id TEXT NOT NULL,
    user_id TEXT NOT NULL,
    instance_id TEXT NOT NULL,
    creation_date TIMESTAMPTZ NOT NULL,
    change_date TIMESTAMPTZ NOT NULL,
    sequence BIGINT NOT NULL,
    resource_owner TEXT NOT NULL,
    roles TEXT[] NOT NULL DEFAULT '{}'::text[]
);

-- Table: public.project_grants_projection
CREATE TABLE IF NOT EXISTS public.project_grants_projection (
    id TEXT NOT NULL,
    creation_date TIMESTAMPTZ NOT NULL,
    change_date TIMESTAMPTZ NOT NULL,
    sequence BIGINT NOT NULL,
    resource_owner TEXT NOT NULL,
    instance_id TEXT NOT NULL,
    project_id TEXT NOT NULL,
    granted_org_id TEXT NOT NULL,
    state SMALLINT NOT NULL DEFAULT 0,
    granted_roles TEXT[] NOT NULL DEFAULT '{}'::text[]
);

-- Table: public.project_roles_projection
CREATE TABLE IF NOT EXISTS public.project_roles_projection (
    project_id TEXT NOT NULL,
    role_key TEXT NOT NULL,
    display_name TEXT NOT NULL,
    role_group TEXT,
    created_at TIMESTAMPTZ NOT NULL,
    updated_at TIMESTAMPTZ NOT NULL,
    sequence BIGINT NOT NULL DEFAULT 0,
    instance_id TEXT NOT NULL DEFAULT 'default-instance'::text,
    change_date TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP
);

-- Table: public.projection_failed_events
CREATE TABLE IF NOT EXISTS public.projection_failed_events (
    projection_name TEXT NOT NULL,
    failed_sequence BIGINT NOT NULL,
    failure_count SMALLINT NOT NULL DEFAULT 1,
    error TEXT,
    instance_id TEXT NOT NULL,
    event_data JSONB,
    last_failed TIMESTAMPTZ NOT NULL DEFAULT now(),
    event_type TEXT,
    aggregate_type TEXT,
    aggregate_id TEXT,
    id TEXT
);

-- Table: public.projection_locks
CREATE TABLE IF NOT EXISTS public.projection_locks (
    projection_name TEXT NOT NULL,
    instance_id TEXT,
    acquired_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    expires_at TIMESTAMPTZ NOT NULL
);

-- Table: public.projection_states
CREATE TABLE IF NOT EXISTS public.projection_states (
    name VARCHAR(255) NOT NULL,
    position NUMERIC NOT NULL DEFAULT 0,
    position_offset INTEGER NOT NULL DEFAULT 0,
    last_processed_at TIMESTAMPTZ,
    created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    status VARCHAR(50) NOT NULL DEFAULT 'stopped'::character varying,
    error_count INTEGER NOT NULL DEFAULT 0,
    last_error TEXT,
    event_timestamp TIMESTAMPTZ,
    instance_id TEXT,
    aggregate_type TEXT,
    aggregate_id TEXT,
    sequence BIGINT
);

-- Table: public.projects_projection
CREATE TABLE IF NOT EXISTS public.projects_projection (
    id TEXT NOT NULL,
    instance_id TEXT NOT NULL,
    name TEXT NOT NULL,
    resource_owner TEXT NOT NULL,
    state TEXT NOT NULL DEFAULT 'active'::text,
    project_role_assertion BOOLEAN NOT NULL DEFAULT false,
    project_role_check BOOLEAN NOT NULL DEFAULT false,
    has_project_check BOOLEAN NOT NULL DEFAULT false,
    private_labeling_setting TEXT NOT NULL DEFAULT 'unspecified'::text,
    created_at TIMESTAMPTZ NOT NULL,
    updated_at TIMESTAMPTZ NOT NULL,
    change_date TIMESTAMPTZ,
    sequence BIGINT NOT NULL DEFAULT 0
);

-- Table: public.quota_notifications
CREATE TABLE IF NOT EXISTS public.quota_notifications (
    id TEXT NOT NULL,
    instance_id TEXT NOT NULL,
    quota_id TEXT NOT NULL,
    call_url TEXT NOT NULL,
    percent INTEGER NOT NULL,
    repeat BOOLEAN NOT NULL DEFAULT false,
    latest_notified_at TIMESTAMPTZ,
    creation_date TIMESTAMPTZ NOT NULL DEFAULT now(),
    change_date TIMESTAMPTZ NOT NULL DEFAULT now(),
    sequence BIGINT NOT NULL DEFAULT 0
);

-- Table: public.quotas
CREATE TABLE IF NOT EXISTS public.quotas (
    id TEXT NOT NULL,
    instance_id TEXT NOT NULL,
    resource_owner TEXT NOT NULL,
    unit TEXT NOT NULL,
    amount BIGINT NOT NULL DEFAULT 0,
    limit_usage BOOLEAN NOT NULL DEFAULT false,
    from_anchor TIMESTAMPTZ NOT NULL,
    interval INTERVAL,
    creation_date TIMESTAMPTZ NOT NULL DEFAULT now(),
    change_date TIMESTAMPTZ NOT NULL DEFAULT now(),
    sequence BIGINT NOT NULL DEFAULT 0
);

-- Table: public.schema_migrations
CREATE TABLE IF NOT EXISTS public.schema_migrations (
    version INTEGER NOT NULL,
    name VARCHAR(255) NOT NULL,
    applied_at TIMESTAMPTZ NOT NULL DEFAULT now()
);

-- Table: public.sessions_projection
CREATE TABLE IF NOT EXISTS public.sessions_projection (
    id TEXT NOT NULL,
    instance_id TEXT NOT NULL,
    state TEXT NOT NULL DEFAULT 'active'::text,
    user_id TEXT,
    user_agent TEXT,
    client_ip TEXT,
    created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    terminated_at TIMESTAMPTZ,
    sequence BIGINT NOT NULL DEFAULT 0,
    metadata JSONB DEFAULT '{}'::jsonb,
    tokens JSONB DEFAULT '[]'::jsonb,
    factors JSONB DEFAULT '[]'::jsonb,
    change_date TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP
);

-- Table: public.sms_configs
CREATE TABLE IF NOT EXISTS public.sms_configs (
    id VARCHAR(255) NOT NULL,
    instance_id VARCHAR(255) NOT NULL,
    provider VARCHAR(50) NOT NULL DEFAULT 'twilio'::character varying,
    twilio_account_sid VARCHAR(255),
    twilio_auth_token VARCHAR(255),
    twilio_phone_number VARCHAR(50),
    twilio_verify_service_sid VARCHAR(255),
    webhook_url VARCHAR(500),
    webhook_headers JSONB,
    enabled BOOLEAN NOT NULL DEFAULT true,
    created_at TIMESTAMP NOT NULL DEFAULT now(),
    updated_at TIMESTAMP NOT NULL DEFAULT now(),
    change_date TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP
);

-- Table: public.test_data
CREATE TABLE IF NOT EXISTS public.test_data (
    id TEXT NOT NULL,
    event_id TEXT,
    event_type TEXT,
    aggregate_id TEXT,
    processed_at TIMESTAMPTZ DEFAULT now()
);

-- Table: public.unique_constraints
CREATE TABLE IF NOT EXISTS public.unique_constraints (
    unique_type TEXT NOT NULL,
    unique_field TEXT NOT NULL,
    instance_id TEXT NOT NULL
);

-- Table: public.user_addresses
CREATE TABLE IF NOT EXISTS public.user_addresses (
    id VARCHAR(255) NOT NULL,
    user_id VARCHAR(255) NOT NULL,
    instance_id VARCHAR(255) NOT NULL,
    country VARCHAR(100),
    locality VARCHAR(255),
    postal_code VARCHAR(20),
    region VARCHAR(255),
    street_address VARCHAR(500),
    formatted_address TEXT,
    address_type VARCHAR(50) DEFAULT 'primary'::character varying,
    is_primary BOOLEAN DEFAULT false,
    created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    change_date TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP
);

-- Table: public.user_auth_methods_projection
CREATE TABLE IF NOT EXISTS public.user_auth_methods_projection (
    id TEXT NOT NULL,
    instance_id TEXT NOT NULL,
    user_id TEXT NOT NULL,
    method_type TEXT NOT NULL,
    state TEXT NOT NULL DEFAULT 'active'::text,
    token_id TEXT,
    public_key BYTEA,
    name TEXT,
    created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    change_date TIMESTAMPTZ NOT NULL DEFAULT now(),
    sequence BIGINT NOT NULL DEFAULT 0
);

-- Table: public.user_metadata
CREATE TABLE IF NOT EXISTS public.user_metadata (
    id VARCHAR(255) NOT NULL,
    user_id VARCHAR(255) NOT NULL,
    instance_id VARCHAR(255) NOT NULL,
    metadata_key VARCHAR(255) NOT NULL,
    metadata_value JSONB NOT NULL,
    metadata_type VARCHAR(50) DEFAULT 'custom'::character varying,
    scope VARCHAR(255),
    created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    created_by VARCHAR(255),
    updated_by VARCHAR(255),
    change_date TIMESTAMPTZ,
    sequence BIGINT NOT NULL DEFAULT 0,
    resource_owner TEXT
);

-- Table: public.users_projection
CREATE TABLE IF NOT EXISTS public.users_projection (
    id VARCHAR(255) NOT NULL,
    instance_id VARCHAR(255) NOT NULL,
    resource_owner VARCHAR(255) NOT NULL,
    username VARCHAR(255) NOT NULL,
    email VARCHAR(255),
    email_verified BOOLEAN DEFAULT false,
    email_verified_at TIMESTAMPTZ,
    phone VARCHAR(50),
    phone_verified BOOLEAN DEFAULT false,
    phone_verified_at TIMESTAMPTZ,
    first_name VARCHAR(255),
    last_name VARCHAR(255),
    display_name VARCHAR(255),
    nickname VARCHAR(255),
    preferred_language VARCHAR(10),
    gender VARCHAR(50),
    avatar_url TEXT,
    preferred_login_name VARCHAR(255),
    login_names TEXT[],
    state VARCHAR(50) NOT NULL DEFAULT 'active'::character varying,
    user_type VARCHAR(50) NOT NULL DEFAULT 'human'::character varying,
    password_hash TEXT,
    password_changed_at TIMESTAMPTZ,
    password_change_required BOOLEAN DEFAULT false,
    mfa_enabled BOOLEAN DEFAULT false,
    created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    deleted_at TIMESTAMPTZ,
    change_date TIMESTAMPTZ,
    sequence BIGINT NOT NULL DEFAULT 0
);

