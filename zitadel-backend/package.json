{
  "name": "zitadel-backend",
  "version": "0.1.0",
  "description": "TypeScript implementation of Zitadel identity and access management backend",
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "scripts": {
    "build": "tsc",
    "dev": "tsx watch src/index.ts",
    "start": "node dist/index.js",
    "test": "jest",
    "test:unit": "jest --selectProjects unit",
    "test:integration": "jest --selectProjects integration --runInBand",
    "test:integration:single": "jest --selectProjects integration",
    "test:integration:migration": "jest --selectProjects integration test/integration/migration.integration.test.ts",
    "test:integration:database": "jest --selectProjects integration test/integration/database.integration.test.ts",
    "test:integration:user": "jest --selectProjects integration test/integration/user-operations.integration.test.ts",
    "test:integration:setup": "docker compose -f docker-compose.test.yml up -d test-db && npm run test:integration:wait",
    "test:integration:wait": "node -e \"const{exec}=require('child_process');let i=0;const check=()=>{if(i++>30){console.error('Timeout');process.exit(1)}exec('docker exec zitadel-test-db pg_isready -U postgres',(e,o)=>{if(o.includes('accepting')){console.log('DB ready');return}setTimeout(check,1000)})};check()\"",
    "test:integration:teardown": "docker compose -f docker-compose.test.yml down -v",
    "test:integration:full": "npm run test:integration:setup && npm run test:integration && npm run test:integration:teardown",
    "test:all": "npm run test:unit && npm run test:integration:full",
    "test:projections": "bash scripts/run-projection-tests.sh",
    "test:projections:continue": "bash scripts/run-projection-tests.sh --continue",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "db:test:start": "docker compose -f docker-compose.test.yml up -d test-db",
    "db:test:stop": "docker compose -f docker-compose.test.yml down",
    "db:test:logs": "docker compose -f docker-compose.test.yml logs -f test-db",
    "db:test:shell": "docker exec -it zitadel-test-db psql -U postgres -d zitadel_test",
    "lint": "eslint src --ext .ts",
    "lint:fix": "eslint src --ext .ts --fix",
    "format": "prettier --write \"src/**/*.ts\"",
    "type-check": "tsc --noEmit"
  },
  "keywords": [
    "zitadel",
    "identity",
    "access-management",
    "iam",
    "authentication",
    "authorization",
    "event-sourcing",
    "cqrs"
  ],
  "author": "",
  "license": "Apache-2.0",
  "dependencies": {
    "@grpc/grpc-js": "^1.14.0",
    "@grpc/proto-loader": "^0.8.0",
    "@grpc/reflection": "^1.0.4",
    "@types/bcrypt": "^6.0.0",
    "bcrypt": "^6.0.0",
    "bcryptjs": "^2.4.3",
    "cors": "^2.8.5",
    "date-fns": "^3.0.6",
    "dotenv": "^16.3.1",
    "express": "^4.18.2",
    "google-protobuf": "^4.0.0",
    "helmet": "^7.1.0",
    "ioredis": "^5.3.2",
    "jsonwebtoken": "^9.0.2",
    "libphonenumber-js": "^1.12.23",
    "nodemailer": "^7.0.9",
    "otplib": "^12.0.1",
    "pg": "^8.11.3",
    "samlify": "^2.10.1",
    "uuid": "^9.0.1",
    "winston": "^3.11.0",
    "zod": "^3.22.4"
  },
  "devDependencies": {
    "@types/bcryptjs": "^2.4.6",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/google-protobuf": "^3.15.12",
    "@types/jest": "^29.5.14",
    "@types/jsonwebtoken": "^9.0.5",
    "@types/node": "^20.11.0",
    "@types/nodemailer": "^7.0.2",
    "@types/pg": "^8.10.9",
    "@types/pg-promise": "^0.0.28",
    "@types/uuid": "^9.0.7",
    "@typescript-eslint/eslint-plugin": "^6.19.0",
    "@typescript-eslint/parser": "^6.19.0",
    "eslint": "^8.56.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.1.3",
    "grpc-tools": "^1.13.0",
    "jest": "^29.7.0",
    "prettier": "^3.2.4",
    "ts-jest": "^29.4.4",
    "tsx": "^4.7.0",
    "typescript": "^5.3.3"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  }
}
